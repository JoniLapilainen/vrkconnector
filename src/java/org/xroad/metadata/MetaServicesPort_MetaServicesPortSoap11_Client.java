
package org.xroad.metadata;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

import org.xroad.*;
import org.xroad.xml.xrd.XRoadServiceIdentifierType;

/**
 * This class was generated by Apache CXF 3.0.3
 * 2017-10-26T17:39:25.324+03:00
 * Generated source version: 3.0.3
 * 
 */
public final class MetaServicesPort_MetaServicesPortSoap11_Client {

    private static final QName SERVICE_NAME = new QName("http://metadata.x-road.eu/", "producerPortService");

    private MetaServicesPort_MetaServicesPortSoap11_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = ProducerPortService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        ProducerPortService ss = new ProducerPortService(wsdlURL, SERVICE_NAME);
        MetaServicesPort port = ss.getMetaServicesPortSoap11();  
        
        {
        System.out.println("Invoking allowedMethods...");
        java.util.List<XRoadServiceIdentifierType> _allowedMethods__return = port.allowedMethods();
        System.out.println("allowedMethods.result=" + _allowedMethods__return);


        }
        {
        System.out.println("Invoking listMethods...");
        java.util.List<XRoadServiceIdentifierType> _listMethods__return = port.listMethods();
        System.out.println("listMethods.result=" + _listMethods__return);


        }

        System.exit(0);
    }

}
